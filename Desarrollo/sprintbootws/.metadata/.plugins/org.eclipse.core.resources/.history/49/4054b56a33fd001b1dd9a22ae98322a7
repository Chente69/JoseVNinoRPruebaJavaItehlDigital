package com.itehl.cursos.presentacion.mvc.controladores;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import com.itehl.cursos.negocio.servicios.CursoService;
import com.itehl.cursos.modelo.dal.CursoRepository;
import com.itehl.cursos.modelo.entidades.Curso;

@CrossOrigin(origins = "http://localhost:8081")
@RestController
@RequestMapping("/api")
public class CursoRestController {
	@Autowired
    private CursoRepository repo;
	 
	 @GetMapping("/cursos")
	  public ResponseEntity<List<Curso>> getAllTutorials(@RequestParam(required = false) String title) {
	    try {
	      List<Curso> tutorials = new ArrayList<Curso>();

	      //if (title == null)
	    	  repo.findAll().forEach(tutorials::add);
	      /*else
	    	  repo.findByTitleContaining(title).forEach(tutorials::add);
*/
	      if (tutorials.isEmpty()) {
	        return new ResponseEntity<>(HttpStatus.NO_CONTENT);
	      }

	      return new ResponseEntity<>(tutorials, HttpStatus.OK);
	    } catch (Exception e) {
	      return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR);
	    }
	  }
}
